import{_ as s,o as e,c as a,S as o}from"./chunks/framework.74a54eab.js";const u=JSON.parse('{"title":"Helpers","description":"","frontmatter":{},"headers":[],"relativePath":"reference/helpers.md","filePath":"reference/helpers.md","lastUpdated":null}'),n={name:"reference/helpers.md"},l=o('<h1 id="helpers" tabindex="-1">Helpers <a class="header-anchor" href="#helpers" aria-label="Permalink to &quot;Helpers&quot;">​</a></h1><p>This API reference guide provides detailed information on error handling utility functions for working with error responses in your application.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#table-of-contents">Table of Contents</a><ul><li><a href="#function-hasfilesdeep">Function: <code>hasFilesDeep</code></a></li><li><a href="#function-isfile">Function: <code>isFile</code></a></li><li><a href="#function-makeerror">Function: <code>makeError</code></a></li></ul></li><li><a href="#summary">Summary</a></li></ul><h3 id="function-hasfilesdeep" tabindex="-1">Function: <code>hasFilesDeep</code> <a class="header-anchor" href="#function-hasfilesdeep" aria-label="Permalink to &quot;Function: `hasFilesDeep`&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hasFilesDeep</span><span style="color:#E1E4E8;">(object</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> { [</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">; })</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hasFilesDeep</span><span style="color:#24292E;">(object</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> { [</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">; })</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span></span></code></pre></div><ul><li>Determines if file data is available embedded within the data object.</li><li>Parameters: <ul><li><code>object</code>: An object that may contain embedded file data.</li></ul></li><li>Returns: A boolean value indicating whether file data is present within the object.</li></ul><h3 id="function-isfile" tabindex="-1">Function: <code>isFile</code> <a class="header-anchor" href="#function-isfile" aria-label="Permalink to &quot;Function: `isFile`&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isFile</span><span style="color:#E1E4E8;">(object</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isFile</span><span style="color:#24292E;">(object</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span></span></code></pre></div><ul><li>Determines if the given object is a file or a file list.</li><li>Parameters: <ul><li><code>object</code>: Any value to be checked.</li></ul></li><li>Returns: A boolean value indicating whether the provided object is a file or a file list.</li></ul><h3 id="function-makeerror" tabindex="-1">Function: <code>makeError</code> <a class="header-anchor" href="#function-makeerror" aria-label="Permalink to &quot;Function: `makeError`&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">makeError</span><span style="color:#E1E4E8;">(errors</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> { [</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]; })</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ErrorResponse</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">makeError</span><span style="color:#24292E;">(errors</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> { [</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]; })</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ErrorResponse</span></span></code></pre></div><ul><li>Creates a new error response object.</li><li>Parameters: <ul><li><code>errors</code>: An object containing error messages categorized by field.</li></ul></li><li>Returns: An <code>ErrorResponse</code> object with the specified error data.</li></ul><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>This set of utility functions is designed to help you manage error responses and related tasks in your application.</p><ul><li><p><code>hasFilesDeep</code>: Use this function to determine if any file data is present within a deeply nested object. This is useful when dealing with complex data structures.</p></li><li><p><code>isFile</code>: Use this function to check if an object is an instance of <code>File</code> or <code>FileList</code>, which is helpful when handling file uploads.</p></li><li><p><code>makeError</code>: This function allows you to quickly create an <code>ErrorResponse</code> object with a specified set of error messages, typically used when simulating or generating error responses for testing and development purposes.</p></li></ul>',16),t=[l];function p(r,c,i,d,y,h){return e(),a("div",null,t)}const f=s(n,[["render",p]]);export{u as __pageData,f as default};
