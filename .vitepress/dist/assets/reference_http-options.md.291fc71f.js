import{_ as e,o as t,c as o,S as i}from"./chunks/framework.74a54eab.js";const T=JSON.parse('{"title":"HTTP Options","description":"","frontmatter":{},"headers":[],"relativePath":"reference/http-options.md","filePath":"reference/http-options.md","lastUpdated":null}'),s={name:"reference/http-options.md"},r=i('<h1 id="http-options" tabindex="-1">HTTP Options <a class="header-anchor" href="#http-options" aria-label="Permalink to &quot;HTTP Options&quot;">​</a></h1><p>This API reference guide provides detailed information on the <code>HttpOptions</code> type and its properties for configuring HTTP request behavior in your application.</p><h2 id="http-options-type-httpoptions" tabindex="-1">HTTP Options Type: <code>HttpOptions</code> <a class="header-anchor" href="#http-options-type-httpoptions" aria-label="Permalink to &quot;HTTP Options Type: `HttpOptions`&quot;">​</a></h2><p><code>HttpOptions</code> is a type definition used to configure various options for making HTTP requests in your application.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><ol><li><p><code>withCredentials</code></p><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li><li>Description: Determines if cross-site Access-Control requests should be made using credentials. When set to <code>true</code>, the browser includes credentials like cookies and HTTP authentication information in the request.</li></ul></li><li><p><code>responseType</code></p><ul><li>Type: <code>Http.DEFAULT_RESPONSE_TYPE | string</code></li><li>Default: <code>&quot;json&quot;</code></li><li>Description: Specifies the default response type for HTTP requests. It controls how the response data is interpreted. The default value is <code>&quot;json&quot;</code> which expects JSON data, but you can specify other types such as <code>&quot;text&quot;</code> or <code>&quot;document&quot;</code>.</li></ul></li><li><p><code>responseEncoding</code></p><ul><li>Type: <code>Http.DEFAULT_RESPONSE_ENCODING | string</code></li><li>Default: <code>&quot;utf8&quot;</code></li><li>Description: Sets the default response encoding for HTTP requests. This property determines how text responses are decoded. The default value is <code>&quot;utf8&quot;</code>, but you can specify other encodings if needed.</li></ul></li><li><p><code>xsrfCookieName</code></p><ul><li>Type: <code>Http.XSRF_COOKIE_NAME | string</code></li><li>Default: <code>&quot;XSRF-TOKEN&quot;</code></li><li>Description: Specifies the name of the cookie to use for Cross-Site Request Forgery (XSRF) protection. XSRF cookies help prevent cross-site request forgery attacks.</li></ul></li><li><p><code>xsrfHeaderName</code></p><ul><li>Type: <code>Http.XSRF_HEADER_NAME | string</code></li><li>Default: <code>&quot;X-XSRF-TOKEN&quot;</code></li><li>Description: Sets the name of the header to use for Cross-Site Request Forgery (XSRF) protection. This header is typically included in HTTP requests to transmit XSRF tokens.</li></ul></li><li><p><code>maxRedirects</code></p><ul><li>Type: <code>number</code></li><li>Default: <code>21</code></li><li>Description: Specifies the maximum number of redirects to follow for an HTTP request. When a server responds with a redirect, the client can choose to follow it up to this maximum limit.</li></ul></li><li><p><code>baseUrl</code></p><ul><li>Type: <code>string</code></li><li>Default: <code>undefined</code></li><li>Description: Defines the base URL to use for all HTTP requests. When specified, this base URL is prepended to all relative URLs in the requests.</li></ul></li></ol><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>The <code>HttpOptions</code> type offers a range of configuration options to control the behavior of your application&#39;s HTTP requests. You can fine-tune settings related to credentials, response type, encoding, XSRF protection, maximum redirects, and the base URL for all requests, ensuring that your HTTP requests align with your application&#39;s requirements and security considerations.</p>',8),n=[r];function a(c,l,p,d,u,h){return t(),o("div",null,n)}const m=e(s,[["render",a]]);export{T as __pageData,m as default};
