import{_ as e,o,c as i,S as l}from"./chunks/framework.74a54eab.js";const m=JSON.parse('{"title":"Form Options","description":"","frontmatter":{},"headers":[],"relativePath":"reference/form-options.md","filePath":"reference/form-options.md","lastUpdated":null}'),t={name:"reference/form-options.md"},r=l('<h1 id="form-options" tabindex="-1">Form Options <a class="header-anchor" href="#form-options" aria-label="Permalink to &quot;Form Options&quot;">​</a></h1><p>This API reference guide provides detailed information on the <code>FormOptions</code> type and its properties for configuring form behavior in your application.</p><h2 id="form-options-type-formoptions" tabindex="-1">Form Options Type: <code>FormOptions</code> <a class="header-anchor" href="#form-options-type-formoptions" aria-label="Permalink to &quot;Form Options Type: `FormOptions`&quot;">​</a></h2><p><code>FormOptions</code> is a type definition used to configure form behavior and options in your application.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><ol><li><p><code>resetOnSuccess</code></p><ul><li>Type: <code>boolean</code></li><li>Default: <code>undefined</code></li><li>Description: Controls whether form input values should be reset to their initial state when the request is successful.</li></ul></li><li><p><code>setInitialOnSuccess</code></p><ul><li>Type: <code>boolean</code></li><li>Default: <code>undefined</code></li><li>Description: Controls whether form input values should be set to their initial values when the request is successful.</li></ul></li><li><p><code>preserveState</code></p><ul><li>Type: <code>boolean</code></li><li>Default: <code>undefined</code></li><li>Description: Controls whether the state of the page should be preserved after the request is successful.</li></ul></li><li><p><code>preserveScroll</code></p><ul><li>Type: <code>boolean</code></li><li>Default: <code>undefined</code></li><li>Description: Controls whether the scroll position should be preserved after the request is successful.</li></ul></li><li><p><code>baseUrl</code></p><ul><li>Type: <code>URL | string</code></li><li>Default: <code>undefined</code></li><li>Description: Specifies the base URL for all form submission requests.</li></ul></li><li><p><code>token</code></p><ul><li>Type: <code>string</code></li><li>Default: <code>undefined</code></li><li>Description: Specifies the API/Bearer authentication token to be used in form requests.</li></ul></li><li><p><code>http</code></p><ul><li>Type: <code>AxiosStatic</code></li><li>Default: <code>undefined</code></li><li>Description: Provides the HTTP client instance that will be used to send form requests.</li></ul></li><li><p><code>errorHandler</code></p><ul><li>Type: <code>ErrorHandlerInterface</code></li><li>Default: <code>undefined</code></li><li>Description: Specifies the error handler instance that will be used to handle errors resulting from form requests.</li></ul></li><li><p><code>only</code></p><ul><li>Type: <code>string[]</code></li><li>Default: <code>undefined</code></li><li>Description: Defines an array of form field names. Only the values of these fields will be included in form submissions.</li></ul></li><li><p><code>onBefore</code></p><ul><li>Type: <code>Function</code></li><li>Default: <code>undefined</code></li><li>Description: A callback function to be executed before the form request is sent.</li></ul></li><li><p><code>onCancel</code></p><ul><li>Type: <code>Function</code></li><li>Default: <code>undefined</code></li><li>Description: A callback function to be executed when the form request is canceled.</li></ul></li><li><p><code>onSuccess</code></p><ul><li>Type: <code>(response: Response) =&gt; void</code></li><li>Default: <code>undefined</code></li><li>Description: A callback function to be executed when the form request is successful. It receives the response as a parameter.</li></ul></li><li><p><code>onFail</code></p><ul><li>Type: <code>(error: ErrorResponse) =&gt; void</code></li><li>Default: <code>undefined</code></li><li>Description: A callback function to be executed when the form request fails. It receives the error response as a parameter.</li></ul></li><li><p><code>onFinish</code></p><ul><li>Type: <code>Function</code></li><li>Default: <code>undefined</code></li><li>Description: A callback function to be executed when the form request is completed, regardless of success or failure.</li></ul></li></ol><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>The <code>FormOptions</code> type provides a flexible configuration mechanism for handling form behavior in your application. You can customize how forms behave, including resetting values, preserving state, specifying a base URL, and defining callback functions to respond to various stages of the form request lifecycle.</p>',8),s=[r];function c(n,d,a,u,p,f){return o(),i("div",null,s)}const b=e(t,[["render",c]]);export{m as __pageData,b as default};
