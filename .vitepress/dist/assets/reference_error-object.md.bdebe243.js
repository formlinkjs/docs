import{_ as e,o as r,c as o,S as a}from"./chunks/framework.74a54eab.js";const f=JSON.parse('{"title":"ErrorObject API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"reference/error-object.md","filePath":"reference/error-object.md","lastUpdated":null}'),s={name:"reference/error-object.md"},t=a(`<h1 id="errorobject-api-reference" tabindex="-1">ErrorObject API Reference <a class="header-anchor" href="#errorobject-api-reference" aria-label="Permalink to &quot;ErrorObject API Reference&quot;">​</a></h1><p>This API reference guide provides detailed information on the <code>ErrorObject</code> type and its properties, which are used to represent individual error objects in your application.</p><h2 id="errorobject-type-errorobject" tabindex="-1">ErrorObject Type: <code>ErrorObject</code> <a class="header-anchor" href="#errorobject-type-errorobject" aria-label="Permalink to &quot;ErrorObject Type: \`ErrorObject\`&quot;">​</a></h2><p><code>ErrorObject</code> is a type definition used to represent individual error objects in your application. Each <code>ErrorObject</code> contains information about a specific error, including the field to which it belongs and a detailed description of the error.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><ol><li><p><code>field</code></p><ul><li>Type: <code>string</code></li><li>Description: Specifies the field or input element to which the error pertains. This field serves as a reference to identify where the error occurred in your application.</li></ul></li><li><p><code>message</code></p><ul><li>Type: <code>string|string[]</code></li><li>Description: Provides a detailed description of the error. This property can be either a single string or an array of strings. The message(s) describe the nature and cause of the error, offering information for error handling and user feedback.</li></ul></li></ol><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>The <code>ErrorObject</code> type is commonly used in error handling scenarios to represent specific errors associated with form fields or other components in your application. You can create an array of <code>ErrorObject</code> instances to capture multiple errors, associating each error with a particular field.</p><p>Here&#39;s an example of how you might use <code>ErrorObject</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">error</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ErrorObject</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    field: </span><span style="color:#9ECBFF;">&quot;email&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    message: </span><span style="color:#9ECBFF;">&quot;The email field is required.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">error</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ErrorObject</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    field: </span><span style="color:#032F62;">&quot;email&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    message: </span><span style="color:#032F62;">&quot;The email field is required.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>In this example, <code>error</code> represents an error associated with the &quot;email&quot; field, with a message indicating that the field is required. You can create multiple <code>ErrorObject</code> instances to handle various errors in your application.</p><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>The <code>ErrorObject</code> type is a fundamental building block for handling and representing errors in your application. It allows you to structure error information in a way that is easy to work with, making it essential for error reporting and user feedback in your software.</p>`,13),n=[t];function i(c,l,p,d,h,u){return r(),o("div",null,n)}const E=e(s,[["render",i]]);export{f as __pageData,E as default};
