import{_ as s,o as a,c as n,S as o}from"./chunks/framework.74a54eab.js";const h=JSON.parse('{"title":"Getting Started with FormlinkJS","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/getting-started.md","lastUpdated":null}'),l={name:"guide/getting-started.md"},e=o(`<h1 id="getting-started-with-formlinkjs" tabindex="-1">Getting Started with FormlinkJS <a class="header-anchor" href="#getting-started-with-formlinkjs" aria-label="Permalink to &quot;Getting Started with FormlinkJS&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#table-of-contents">Table of Contents</a></li><li><a href="#installation">Installation</a><ul><li><a href="#prerequisites">Prerequisites</a></li></ul></li><li><a href="#import-the-form-class">Import the Form Class</a></li><li><a href="#create-a-new-form-instance">Create a New Form Instance</a></li><li><a href="#initialize-form-data">Initialize Form Data</a></li><li><a href="#access-and-update-form-data">Access and Update Form Data</a></li><li><a href="#set-form-options">Set Form Options</a></li><li><a href="#form-submission">Form Submission</a></li><li><a href="#handle-form-submission-results">Handle Form Submission Results</a></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><p>Before starting with FormlinkJS, make sure you have the following prerequisites in place:</p><ul><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a> version 16 or higher.</li></ul><p>FormlinkJS can be integrated into an existing project or used independently. Regardless of your choice, you can install it using one of the following package managers:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-L5VbC" id="tab-tpr9qpf" checked="checked"><label for="tab-tpr9qpf">npm</label><input type="radio" name="group-L5VbC" id="tab-_ENkaNg"><label for="tab-_ENkaNg">pnpm</label><input type="radio" name="group-L5VbC" id="tab-61hMvX4"><label for="tab-61hMvX4">yarn</label><input type="radio" name="group-L5VbC" id="tab-8SCIjew"><label for="tab-8SCIjew">bun</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">formlink</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">formlink</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">formlink</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">formlink</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">formlink</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">formlink</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">formlink</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">formlink</span></span></code></pre></div></div></div><h2 id="import-the-form-class" tabindex="-1">Import the Form Class <a class="header-anchor" href="#import-the-form-class" aria-label="Permalink to &quot;Import the Form Class&quot;">​</a></h2><p>Once you&#39;ve installed the required dependencies, you can import the <code>Form</code> class into your project. Be sure to provide the correct path to the <code>Form</code> class in your import statement:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Form } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;formlink&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Form } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;formlink&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Replace <code>&#39;path-to-your-form-class&#39;</code> with the actual path to your <code>Form.ts</code> file.</p><h2 id="create-a-new-form-instance" tabindex="-1">Create a New Form Instance <a class="header-anchor" href="#create-a-new-form-instance" aria-label="Permalink to &quot;Create a New Form Instance&quot;">​</a></h2><p>To create a new instance of the <code>Form</code> class, use its constructor:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">form</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Form</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">form</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Form</span><span style="color:#24292E;">();</span></span></code></pre></div><p>or</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">form</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Form.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">form</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Form.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="initialize-form-data" tabindex="-1">Initialize Form Data <a class="header-anchor" href="#initialize-form-data" aria-label="Permalink to &quot;Initialize Form Data&quot;">​</a></h2><p>You can initialize the form data by passing an object containing the initial data to the <code>Form</code> constructor. For example:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">form</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Form</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    firstName: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    lastName: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    email: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    baseUrl: </span><span style="color:#9ECBFF;">&#39;/api&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    token: </span><span style="color:#9ECBFF;">&#39;your-api-token&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">form</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Form</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    firstName: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    lastName: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    email: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}, {</span></span>
<span class="line"><span style="color:#24292E;">    baseUrl: </span><span style="color:#032F62;">&#39;/api&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    token: </span><span style="color:#032F62;">&#39;your-api-token&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>Now, you&#39;re prepared to use the <code>Form</code> class to access and modify form data, set options, and handle form submissions.</p><h2 id="access-and-update-form-data" tabindex="-1">Access and Update Form Data <a class="header-anchor" href="#access-and-update-form-data" aria-label="Permalink to &quot;Access and Update Form Data&quot;">​</a></h2><p>You can directly access and update form data fields on the <code>form</code> instance. For instance:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">form.firstName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">form.lastName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Doe&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">form.email </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;johndoe@example.com&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">form.firstName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">form.lastName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Doe&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">form.email </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;johndoe@example.com&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>You can also retrieve the current values of form fields:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">firstName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> form.firstName;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lastName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> form.lastName;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">email</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> form.email;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">firstName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> form.firstName;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lastName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> form.lastName;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">email</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> form.email;</span></span></code></pre></div><h2 id="set-form-options" tabindex="-1">Set Form Options <a class="header-anchor" href="#set-form-options" aria-label="Permalink to &quot;Set Form Options&quot;">​</a></h2><p>The <code>Form</code> class offers various options for form handling. You can configure options using the <code>withOptions</code> method:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">form.</span><span style="color:#B392F0;">withOptions</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    resetOnSuccess: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Reset form on successful submission</span></span>
<span class="line"><span style="color:#E1E4E8;">    setInitialOnSuccess: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Set initial values on successful submission</span></span>
<span class="line"><span style="color:#E1E4E8;">    preserveState: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Preserve form state</span></span>
<span class="line"><span style="color:#E1E4E8;">    preserveScroll: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Preserve scroll position</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">form.</span><span style="color:#6F42C1;">withOptions</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    resetOnSuccess: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Reset form on successful submission</span></span>
<span class="line"><span style="color:#24292E;">    setInitialOnSuccess: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Set initial values on successful submission</span></span>
<span class="line"><span style="color:#24292E;">    preserveState: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Preserve form state</span></span>
<span class="line"><span style="color:#24292E;">    preserveScroll: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Preserve scroll position</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="form-submission" tabindex="-1">Form Submission <a class="header-anchor" href="#form-submission" aria-label="Permalink to &quot;Form Submission&quot;">​</a></h2><p>The <code>Form</code> class provides methods for making HTTP requests. You can use these methods to send data to a server:</p><ul><li><code>get(url, options)</code>: Send a GET request.</li><li><code>post(url, options)</code>: Send a POST request.</li><li><code>put(url, options)</code>: Send a PUT request.</li><li><code>patch(url, options)</code>: Send a PATCH request.</li><li><code>delete(url, options)</code>: Send a DELETE request.</li></ul><p>For example, to send a POST request:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">form.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/submit&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Additional options for the request</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// You can also specify callback functions for success and failure</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onSuccess</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Handle success response</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onFail</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">errors</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Handle error response</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onFinish</span><span style="color:#E1E4E8;">: () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Handle post-request actions</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">form.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/submit&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Additional options for the request</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// You can also specify callback functions for success and failure</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onSuccess</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">response</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Handle success response</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onFail</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">errors</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Handle error response</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onFinish</span><span style="color:#24292E;">: () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Handle post-request actions</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="handle-form-submission-results" tabindex="-1">Handle Form Submission Results <a class="header-anchor" href="#handle-form-submission-results" aria-label="Permalink to &quot;Handle Form Submission Results&quot;">​</a></h2><p>You can handle the results of form submissions using the provided callback functions for success and failure, as demonstrated in the previous step. This enables you to react to the server&#39;s response and manage errors.</p><p>Additionally, you can check the form&#39;s status using the following methods:</p><ul><li><code>isProcessing()</code>: Verify if the form submission is still in progress.</li><li><code>isSuccessful()</code>: Check if the form submission was successful.</li><li><code>isRecentlySuccessful()</code>: Determine if the form was recently submitted, completed, and successful.</li><li><code>getIsDirty()</code>: Identify if the form has been modified.</li></ul><p>You can use these methods to provide user feedback and trigger actions based on the form&#39;s status.</p><p>This guide should assist you in getting started with the <code>Form</code> class. Make sure to customize it to meet your specific use case and requirements.</p>`,41),p=[e];function t(r,c,i,E,y,d){return a(),n("div",null,p)}const m=s(l,[["render",t]]);export{h as __pageData,m as default};
